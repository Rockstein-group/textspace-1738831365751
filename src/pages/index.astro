---
import Seo from "../components/Seo.astro";
import { Image } from "astro:assets";
import imgimages_gii_banner_arrow_right_webp from "../../public/images/gii_banner_arrow_right.webp";
import imgimages_gii_image_banner_right_webp from "../../public/images/gii_image_banner_right.webp";
import '../styles/global.css';
---

<html lang="en">
	<head>
		
        <script>
        import { showToast } from "../components/toast";
        (() => {
          const els = [...document.querySelectorAll('form')];
          if (!els?.length) return;
          els.forEach(el => {
            el.addEventListener('submit', async (e) => {
              e.preventDefault();
              const formData = new FormData(e.target);
              const formObject = Object.fromEntries(formData);
              formObject.emailUser = "quangnhat249@gmail.com";
              try {
                const response = await fetch('undefined/api/send-mail-contact', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify(formObject)
                });
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                const result = await response.json();
                showToast('Form submitted successfully!');
              } catch (error) {
                console.error('Error submitting form:', error);
                showToast('Error submitting form', 'error');
              }
            });
          });
        })();
      </script>
      <script>
      class LazyLoad extends HTMLElement {
        constructor() {
          super();
          class HeadlessDetect {
            allTestFunctions = [
              "testUserAgent",
              "testChromeWindow",
              "testPlugins",
              "testAppVersion",
              "testConnectionRtt",
            ];

            constructor() {}

            testUserAgent() {
              if (/Headless/.test(window.navigator.userAgent)) {
                return 1;
              } else {
                return 0;
              }
            }

            testChromeWindow() {
              // @ts-ignore
              if (eval.toString().length == 33 && !window.chrome) {
                return 1;
              } else {
                return 0;
              }
            }

            testNotificationPermissions(callback) {
              navigator.permissions
                .query({ name: "notifications" })
                .then(function (permissionStatus) {
                  if (
                    Notification.permission === "denied" &&
                    permissionStatus.state === "prompt"
                  ) {
                    // Headless
                    callback(1);
                  } else {
                    // Not Headless
                    callback(0);
                  }
                });
            }

            testPlugins() {
              let length = navigator.plugins.length;

              return length === 0 ? 1 : 0;
            }

            testAppVersion() {
              let appVersion = navigator.appVersion;

              return /headless/i.test(appVersion) ? 1 : 0;
            }

            // Connection Rtt
            testConnectionRtt() {
              // @ts-ignore
              let connection = navigator.connection;
              let connectionRtt = connection ? connection.rtt : undefined;

              if (connectionRtt === undefined) {
                return 0;
              } else {
                return connectionRtt === 0 ? 1 : 0;
              }
            }

            getHeadlessScore() {
              let score = 0;
              let testsRun = 0;

              this.testNotificationPermissions(function (v) {
                score += v;
                testsRun++;
              });

              for (let i = 0; i < this.allTestFunctions.length; i++) {
                score += this[this.allTestFunctions[i]].apply();
                testsRun++;
              }

              return score / testsRun;
            }
          }
          const headlessDetector = new HeadlessDetect();
          if (headlessDetector.getHeadlessScore() > 0.25) {
            while (this.firstChild) {
              this.removeChild(this.firstChild);
            }
          }
        }
      }

      customElements.define("lazy-load", LazyLoad);
    </script>
        <Seo seo={{ title: "EcoBuilder", description: "Page description", keywords: "", canonical: "https://textspace-1738831375219.netlify.app/", image: 'https://textspace-1738831375219.netlify.app', type: "website", themeColor: "#ffffff"}} />
		<meta charset="utf-8" />
		<link rel="icon" type="image/x-icon" href=/favicons/1738827346299_favicon.ico /> 
		<!-- <link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/> -->
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<title>Astro</title>
	</head>
	<body> <header class="flex flex-col relative shrink-0 box-border h-auto empty:min-h-[30vh] before:content-[&#x27;Header&#x27;] before:absolute before:top-0 before:left-0 before:inline-block before:py-1 before:px-2 before:bg-black/20 before:text-white before:text-sm before:rounded before:!rounded-tl-none before:!rounded-bl-none mb-[1px] header-section"></header><main class="flex flex-col relative shrink-0 box-border h-auto empty:min-h-[30vh] before:content-[&#x27;Main&#x27;] before:absolute before:top-0 before:left-0 before:inline-block before:py-1 before:px-2 before:bg-black/20 before:text-white before:text-sm before:rounded before:!rounded-tl-none before:!rounded-bl-none mb-[1px] main-section"><div class="bg-slate-800 lg:bg-[#f1f5f9]" aria-label="Hero Dark Section"><section class="w-full grid grid-cols-1 xl:grid-cols-2 font-semibold text-white max-w-screen-2xl px-5 lg:px-8 py-16 mx-auto gap-6" aria-label="Hero Dark Section Wrapper"><div class="flex lg:min-h-[440px] max-w-full flex-col items-start max-md:gap-10 gap-16" aria-label="Left Content of Hero Dark Section"><h1 width="auto" height="auto" class="max-md:max-w-full text-4xl self-stretch lg:text-[54px] leading-snug font-bold flex flex-col items-start gap-4" aria-label="Main title for Hero Dark Section"><span width="auto" height="auto" class="w-full" aria-label="Main title part 1">Agissez pour un Numérique plus </span><span width="auto" height="auto" class="text-lime-400 w-full" aria-label="Main title part 2">éthique et soutenable</span></h1><nav class="max-md:max-w-full flex flex-wrap items-center gap-1 md:gap-4 lg:gap-9 text-xl md:text-2xl" aria-label="Hero Dark Navigation"><span width="auto" height="auto" class="my-auto self-stretch" aria-label="Navigation Item 1: Évaluez">Évaluez</span><Image alt="arrowRightIcon" src={imgimages_gii_banner_arrow_right_webp} width="400" height="300" class="my-auto aspect-[1.1] w-[40px] lg:w-[54px] shrink-0 self-stretch object-contain" aria-label="Right arrow icon for navigation" /><span width="auto" height="auto" class="my-auto self-stretch" aria-label="Navigation Item 2: Activez">Activez</span><Image alt="arrowRightIcon" src={imgimages_gii_banner_arrow_right_webp} width="400" height="300" class="my-auto aspect-[1.08] w-[40px] lg:w-[54px] shrink-0 self-stretch object-contain" aria-label="Right arrow icon for navigation" /><span width="auto" height="auto" class="my-auto self-stretch" aria-label="Navigation Item 3: Améliorez">Améliorez</span></nav><a href="#" width="auto" height="auto" class="flex justify-center items-center text-center mt-0 overflow-hidden rounded-md bg-lime-500 px-12 py-2.5 text-[14px] md:text-base lg:text-xl leading-snug text-slate-800 mx-auto md:ml-0 md:mr-0 lg:w-auto" aria-label="Button to reserve a demo" cssResizer="w-[85%] md:w-[60%] ">Réserver une démo</a></div><Image alt="Banner right image" src={imgimages_gii_image_banner_right_webp} width="736" height="626" class="object-contain lg:mt-0 w-full lg:w-[736px] lg:h-[626px]" aria-label="Right side image of the Hero Dark Banner" /></section></div></main><lazy-load><footer></footer></lazy-load> </body>
</html>
